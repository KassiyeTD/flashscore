{"ast":null,"code":"var _jsxFileName = \"/Users/kassiyetozat/Desktop/flashscore/frontend/src/components/Leagues.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leagues = () => {\n  _s();\n  const [leagues, setLeagues] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Загрузка данных при монтировании компонента\n  useEffect(() => {\n    fetchLeagues();\n  }, []);\n\n  // Функция для получения данных о лигах\n  const fetchLeagues = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/leagues`);\n      setLeagues(response.data);\n    } catch (error) {\n      console.error('Ошибка при загрузке лиг:', error);\n      setError('Не удалось загрузить данные о лигах.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0422\\u043E\\u043F-5 \\u0444\\u0443\\u0442\\u0431\\u043E\\u043B\\u044C\\u043D\\u044B\\u0445 \\u043B\\u0438\\u0433\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leagues.map(league => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [league.name, \" (\", league.country, \")\"]\n      }, league._id || league.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Leagues, \"RXYMYs6ZQfdCzetqIvfSRdYnPtw=\");\n_c = Leagues;\nexport default Leagues;\nvar _c;\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Leagues","_s","leagues","setLeagues","loading","setLoading","error","setError","fetchLeagues","response","get","process","env","REACT_APP_API_URL","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","league","name","country","_id","_c","$RefreshReg$"],"sources":["/Users/kassiyetozat/Desktop/flashscore/frontend/src/components/Leagues.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Leagues = () => {\n    const [leagues, setLeagues] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Загрузка данных при монтировании компонента\n    useEffect(() => {\n        fetchLeagues();\n    }, []);\n\n    // Функция для получения данных о лигах\n    const fetchLeagues = async () => {\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_API_URL}/leagues`);\n            setLeagues(response.data);\n        } catch (error) {\n            console.error('Ошибка при загрузке лиг:', error);\n            setError('Не удалось загрузить данные о лигах.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    if (loading) {\n        return <p>Загрузка данных...</p>;\n    }\n\n    if (error) {\n        return <p>{error}</p>;\n    }\n\n    return (\n        <div>\n            <h1>Топ-5 футбольных лиг</h1>\n            <ul>\n                {leagues.map((league) => (\n                    <li key={league._id || league.name}>\n                        {league.name} ({league.country})\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Leagues;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAD,SAAS,CAAC,MAAM;IACZa,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,UAAU,CAAC;MAC5EV,UAAU,CAACM,QAAQ,CAACK,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZS,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,sCAAsC,CAAC;IACpD,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,IAAID,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAAiB,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAEA,IAAId,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAAiB,QAAA,EAAIV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrB,OAAA;MAAAiB,QAAA,EACKd,OAAO,CAACmB,GAAG,CAAEC,MAAM,iBAChBvB,OAAA;QAAAiB,QAAA,GACKM,MAAM,CAACC,IAAI,EAAC,IAAE,EAACD,MAAM,CAACE,OAAO,EAAC,GACnC;MAAA,GAFSF,MAAM,CAACG,GAAG,IAAIH,MAAM,CAACC,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CA3CID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}