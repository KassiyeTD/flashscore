{"ast":null,"code":"var _jsxFileName = \"/Users/kassiyetozat/Desktop/flashscore/frontend/src/LigaChamp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Confetti from \"react-confetti\"; // Импорт анимации салюта\nimport \"./LigaChamp.css\"; // Подключение стилей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LigaChamp = () => {\n  _s();\n  const [results, setResults] = useState({});\n  const [winner, setWinner] = useState(\"\"); // Состояние для хранения победителя\n  const [showConfetti, setShowConfetti] = useState(false); // Управление салютом\n  const [teams] = useState([\"Реал Мадрид\", \"Манчестер Сити\", \"Бавария\", \"Барселона\", \"Ливерпуль\", \"Челси\", \"Интер\", \"Милан\", \"ПСЖ\", \"Атлетико\", \"Ювентус\", \"Боруссия Дортмунд\", \"Тоттенхэм\", \"Лейпциг\", \"Наполи\", \"Бенфика\"]);\n  const rounds = [\"1/8 финала\", \"1/4 финала\", \"1/2 финала\", \"Финал\"];\n\n  // Функция проведения матча\n  const playMatch = (team1, team2) => {\n    let score1 = Math.floor(Math.random() * 4);\n    let score2 = Math.floor(Math.random() * 4);\n    return {\n      team1,\n      score1,\n      team2,\n      score2,\n      winner: score1 >= score2 ? team1 : team2\n    };\n  };\n\n  // Асинхронная функция для проведения раунда с задержкой\n  const playRound = async (currentTeams, roundName) => {\n    const nextRoundTeams = [];\n    const roundResults = [];\n    for (let i = 0; i < currentTeams.length; i += 2) {\n      const match = playMatch(currentTeams[i], currentTeams[i + 1]);\n      roundResults.push(match);\n      nextRoundTeams.push(match.winner);\n\n      // Добавляем результат матча с задержкой\n      await new Promise(resolve => {\n        setTimeout(() => {\n          setResults(prevResults => ({\n            ...prevResults,\n            [roundName]: [...(prevResults[roundName] || []), match]\n          }));\n          resolve();\n        }, 2000); // Задержка 2 секунды\n      });\n    }\n\n    // Если это финал, определяем победителя и запускаем салют\n    if (roundName === \"Финал\") {\n      setTimeout(() => {\n        const finalWinner = nextRoundTeams[0]; // Победитель — единственная команда, оставшаяся после финала\n        setWinner(finalWinner); // Устанавливаем победителя\n        setShowConfetti(true); // Показываем салют\n      }, 2000); // Салют запускаем после последнего матча\n    }\n    return nextRoundTeams;\n  };\n\n  // Асинхронная функция для проведения всего турнира\n  const startTournament = async () => {\n    setShowConfetti(false); // Скрываем салют\n    setWinner(\"\"); // Сбрасываем победителя\n    let currentTeams = [...teams];\n    for (const round of rounds) {\n      currentTeams = await playRound(currentTeams, round);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"champions-league\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0412\\u0438\\u0440\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u041B\\u0438\\u0433\\u0430 \\u0427\\u0435\\u043C\\u043F\\u0438\\u043E\\u043D\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTournament,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0443\\u0440\\u043D\\u0438\\u0440\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bracket\",\n      children: Object.entries(results).map(([round, matches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"round\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: round\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), matches.map((match, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match\",\n          children: [match.team1, \" \", match.score1, \" - \", match.score2, \" \", match.team2, \" \", \"| \\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C: \", match.winner]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this))]\n      }, round, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 30\n    }, this), \" \", winner &&\n    /*#__PURE__*/\n    // Отображение победителя после завершения турнира\n    _jsxDEV(\"div\", {\n      className: \"winner-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C: \", winner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"\\xA9 2025 \\u0412\\u0438\\u0440\\u0442\\u0443\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u041B\\u0438\\u0433\\u0430 \\u0427\\u0435\\u043C\\u043F\\u0438\\u043E\\u043D\\u043E\\u0432. \\u0412\\u0441\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0430 \\u0437\\u0430\\u0449\\u0438\\u0449\\u0435\\u043D\\u044B.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(LigaChamp, \"Bkn+U8GusKI3RGAepE/yJVcRLhk=\");\n_c = LigaChamp;\nexport default LigaChamp;\nvar _c;\n$RefreshReg$(_c, \"LigaChamp\");","map":{"version":3,"names":["React","useState","Confetti","jsxDEV","_jsxDEV","LigaChamp","_s","results","setResults","winner","setWinner","showConfetti","setShowConfetti","teams","rounds","playMatch","team1","team2","score1","Math","floor","random","score2","playRound","currentTeams","roundName","nextRoundTeams","roundResults","i","length","match","push","Promise","resolve","setTimeout","prevResults","finalWinner","startTournament","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","entries","map","matches","index","_c","$RefreshReg$"],"sources":["/Users/kassiyetozat/Desktop/flashscore/frontend/src/LigaChamp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Confetti from \"react-confetti\"; // Импорт анимации салюта\r\nimport \"./LigaChamp.css\"; // Подключение стилей\r\n\r\nconst LigaChamp = () => {\r\n    const [results, setResults] = useState({});\r\n    const [winner, setWinner] = useState(\"\"); // Состояние для хранения победителя\r\n    const [showConfetti, setShowConfetti] = useState(false); // Управление салютом\r\n    const [teams] = useState([\r\n        \"Реал Мадрид\",\r\n        \"Манчестер Сити\",\r\n        \"Бавария\",\r\n        \"Барселона\",\r\n        \"Ливерпуль\",\r\n        \"Челси\",\r\n        \"Интер\",\r\n        \"Милан\",\r\n        \"ПСЖ\",\r\n        \"Атлетико\",\r\n        \"Ювентус\",\r\n        \"Боруссия Дортмунд\",\r\n        \"Тоттенхэм\",\r\n        \"Лейпциг\",\r\n        \"Наполи\",\r\n        \"Бенфика\",\r\n    ]);\r\n    const rounds = [\"1/8 финала\", \"1/4 финала\", \"1/2 финала\", \"Финал\"];\r\n\r\n    // Функция проведения матча\r\n    const playMatch = (team1, team2) => {\r\n        let score1 = Math.floor(Math.random() * 4);\r\n        let score2 = Math.floor(Math.random() * 4);\r\n        return {\r\n            team1,\r\n            score1,\r\n            team2,\r\n            score2,\r\n            winner: score1 >= score2 ? team1 : team2,\r\n        };\r\n    };\r\n\r\n    // Асинхронная функция для проведения раунда с задержкой\r\n    const playRound = async (currentTeams, roundName) => {\r\n        const nextRoundTeams = [];\r\n        const roundResults = [];\r\n\r\n        for (let i = 0; i < currentTeams.length; i += 2) {\r\n            const match = playMatch(currentTeams[i], currentTeams[i + 1]);\r\n            roundResults.push(match);\r\n            nextRoundTeams.push(match.winner);\r\n\r\n            // Добавляем результат матча с задержкой\r\n            await new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                    setResults((prevResults) => ({\r\n                        ...prevResults,\r\n                        [roundName]: [...(prevResults[roundName] || []), match],\r\n                    }));\r\n                    resolve();\r\n                }, 2000); // Задержка 2 секунды\r\n            });\r\n        }\r\n\r\n        // Если это финал, определяем победителя и запускаем салют\r\n        if (roundName === \"Финал\") {\r\n            setTimeout(() => {\r\n                const finalWinner = nextRoundTeams[0]; // Победитель — единственная команда, оставшаяся после финала\r\n                setWinner(finalWinner); // Устанавливаем победителя\r\n                setShowConfetti(true); // Показываем салют\r\n            }, 2000); // Салют запускаем после последнего матча\r\n        }\r\n\r\n        return nextRoundTeams;\r\n    };\r\n\r\n    // Асинхронная функция для проведения всего турнира\r\n    const startTournament = async () => {\r\n        setShowConfetti(false); // Скрываем салют\r\n        setWinner(\"\"); // Сбрасываем победителя\r\n        let currentTeams = [...teams];\r\n        for (const round of rounds) {\r\n            currentTeams = await playRound(currentTeams, round);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"champions-league\">\r\n            <div className=\"header\">\r\n                <h1>Виртуальная Лига Чемпионов</h1>\r\n                <button onClick={startTournament}>Начать турнир</button>\r\n            </div>\r\n            <div className=\"bracket\">\r\n                {Object.entries(results).map(([round, matches]) => (\r\n                    <div className=\"round\" key={round}>\r\n                        <h2>{round}</h2>\r\n                        {matches.map((match, index) => (\r\n                            <div className=\"match\" key={index}>\r\n                                {match.team1} {match.score1} - {match.score2} {match.team2}{\" \"}\r\n                                | Победитель: {match.winner}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {showConfetti && <Confetti />} {/* Салют */}\r\n            {winner && ( // Отображение победителя после завершения турнира\r\n                <div className=\"winner-overlay\">\r\n                    <h1>Победитель: {winner}</h1>\r\n                </div>\r\n            )}\r\n            <div className=\"footer\">© 2025 Виртуальная Лига Чемпионов. Все права защищены.</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LigaChamp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}